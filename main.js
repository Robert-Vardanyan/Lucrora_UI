document.addEventListener('DOMContentLoaded', () => {
  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
  const getElement = (id) => {
    const element = document.getElementById(id);
    if (!element) {
      console.error(`–û—à–∏–±–∫–∞: –≠–ª–µ–º–µ–Ω—Ç —Å ID '${id}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ DOM.`);
    }
    return element;
  };

  // –ü–æ–ª—É—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã UI
  const loadingMessage = getElement('loading-message');
  const telegramPrompt = getElement('telegram-prompt');
  const mainContentWrapper = getElement('main-content-wrapper');
  const screenContainer = getElement('screen-container');

  // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –æ–≤–µ—Ä–ª–µ—è –æ—à–∏–±–æ–∫
  const customErrorOverlay = getElement('custom-error-overlay');
  const errorTitle = getElement('error-title');
  const errorMessage = getElement('error-message');
  const errorCloseBtn = getElement('error-close-btn');

  // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  const navHome = getElement('nav-home');
  const navInvest = getElement('nav-invest');
  const navGames = getElement('nav-games');
  const navReferrals = getElement('nav-referrals');
  const navHistory = getElement('nav-history');
  const userProfileIcon = getElement('user-profile-icon');

  // –≠–ª–µ–º–µ–Ω—Ç—ã –±–∞–ª–∞–Ω—Å–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
  const currentMainBalance = getElement('current-main-balance');
  const currentBonusBalance = getElement('current-bonus-balance');

  // –¢–µ–∫—É—â–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —ç–∫—Ä–∞–Ω–∞
  let currentScreenScript = null;

  // –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  if (loadingMessage) loadingMessage.classList.remove('hidden');
  if (telegramPrompt) telegramPrompt.classList.add('hidden');
  if (mainContentWrapper) mainContentWrapper.classList.add('hidden');
  if (customErrorOverlay) customErrorOverlay.classList.add('hidden');

  /**
   * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞.
   * –¢–∞–∫–∂–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π JavaScript-—Ñ–∞–π–ª.
   * @param {string} screenName –ò–º—è —ç–∫—Ä–∞–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'home', 'invest').
   */
  async function loadScreen(screenName) {
    if (!screenContainer) {
      console.error('–û—à–∏–±–∫–∞: –≠–ª–µ–º–µ–Ω—Ç screen-container –Ω–µ –Ω–∞–π–¥–µ–Ω.');
      return;
    }

    // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–∫—Ä–∏–ø—Ç, –µ—Å–ª–∏ –æ–Ω –±—ã–ª
    if (currentScreenScript) {
      document.head.removeChild(currentScreenScript);
      currentScreenScript = null;
    }

    try {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º HTML-—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —ç–∫—Ä–∞–Ω–∞ –∏–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –ø–∞–ø–∫–∏
      const htmlResponse = await fetch(`${screenName}/${screenName}-screen.html`);
      if (!htmlResponse.ok) {
        throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å ${screenName}/${screenName}-screen.html: ${htmlResponse.statusText}`);
      }
      const htmlContent = await htmlResponse.text();
      screenContainer.innerHTML = htmlContent;

      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π JavaScript-—Ñ–∞–π–ª –∏–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –ø–∞–ø–∫–∏
      const script = document.createElement('script');
      script.src = `${screenName}/${screenName}-script.js`;
      script.onload = () => {
        console.log(`–°–∫—Ä–∏–ø—Ç ${screenName}/${screenName}-script.js –∑–∞–≥—Ä—É–∂–µ–Ω.`);
        // –ï—Å–ª–∏ —É —Å–∫—Ä–∏–ø—Ç–∞ –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏, –≤—ã–∑—ã–≤–∞–µ–º –µ–µ
        if (window[`init${capitalizeFirstLetter(screenName)}Screen`]) {
          window[`init${capitalizeFirstLetter(screenName)}Screen`]();
        }
      };
      script.onerror = () => {
        console.error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è ${screenName}/${screenName}-script.js`);
      };
      document.head.appendChild(script);
      currentScreenScript = script;

      // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ —ç–∫—Ä–∞–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      if (screenName !== 'registration') {
        document.querySelectorAll('.nav-item').forEach(item => {
          item.classList.remove('active', 'text-green-600');
          item.classList.add('text-gray-500'); // –°–±—Ä–æ—Å —Ü–≤–µ—Ç–∞
        });

        let activeNavItem;
        if (screenName === 'home') activeNavItem = navHome;
        else if (screenName === 'invest') activeNavItem = navInvest;
        else if (screenName === 'games') activeNavItem = navGames;
        else if (screenName === 'referrals') activeNavItem = navReferrals;
        else if (screenName === 'history') activeNavItem = navHistory;
        else if (screenName === 'profile') activeNavItem = userProfileIcon; // –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –≤ –Ω–∏–∂–Ω–µ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, –Ω–æ —Ç–∞–∫–∂–µ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è

        if (activeNavItem) {
          activeNavItem.classList.add('active', 'text-green-600');
          activeNavItem.classList.remove('text-gray-500');
        }
      } else {
        // –ï—Å–ª–∏ —ç—Ç–æ —ç–∫—Ä–∞–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        document.querySelectorAll('.nav-item').forEach(item => {
          item.classList.remove('active', 'text-green-600');
          item.classList.add('text-gray-500');
        });
      }


    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —ç–∫—Ä–∞–Ω–∞ ${screenName}:`, error);
      showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —ç–∫—Ä–∞–Ω–∞', `–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —ç–∫—Ä–∞–Ω–∞ "${screenName}". ${error.message}`);
    }
  }

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –ø–µ—Ä–≤–æ–π –±—É–∫–≤—ã –≤ –∑–∞–≥–ª–∞–≤–Ω—É—é
  function capitalizeFirstLetter(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–≤–µ—Ä–ª–µ–π —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ.
   * @param {string} title –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—à–∏–±–∫–∏.
   * @param {string} message –ü–æ–¥—Ä–æ–±–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
   */
  function showError(title, message) {
    if (loadingMessage) loadingMessage.classList.add('hidden');
    if (telegramPrompt) telegramPrompt.classList.add('hidden');
    if (mainContentWrapper) mainContentWrapper.classList.add('hidden');
    if (customErrorOverlay) customErrorOverlay.classList.remove('hidden');

    // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    if (errorTitle) errorTitle.textContent = title;
    if (errorMessage) errorMessage.textContent = message;
  }

  /**
   * –°–∫—Ä—ã–≤–∞–µ—Ç –æ–≤–µ—Ä–ª–µ–π —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ.
   */
  function hideError() {
    if (customErrorOverlay) customErrorOverlay.classList.add('hidden');

    if (window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.initDataUnsafe && window.Telegram.WebApp.initDataUnsafe.user) {
      if (mainContentWrapper) mainContentWrapper.classList.remove('hidden');
      // –ü–æ—Å–ª–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      if (window.appData && window.appData.isRegistered) {
        loadScreen('home');
      } else {
        loadScreen('registration');
      }
    } else {
      if (telegramPrompt) telegramPrompt.classList.remove('hidden');
    }
  }

  // –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å —Å–æ–±—ã—Ç–∏–π –∫ –∫–Ω–æ–ø–∫–µ –∑–∞–∫—Ä—ã—Ç–∏—è –æ—à–∏–±–∫–∏
  if (errorCloseBtn) {
    errorCloseBtn.addEventListener('click', hideError);
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram WebApp
  if (!window.Telegram || !window.Telegram.WebApp) {
    if (loadingMessage) loadingMessage.classList.add('hidden');
    if (telegramPrompt) telegramPrompt.classList.remove('hidden');
    return;
  }

  const tg = window.Telegram.WebApp;

  if (!tg.initDataUnsafe || !tg.initDataUnsafe.user) {
    if (loadingMessage) loadingMessage.classList.add('hidden');
    if (telegramPrompt) telegramPrompt.classList.remove('hidden');
    return;
  }

  const user = tg.initDataUnsafe.user;
  console.log("üü° initData:", tg.initData);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –≤–∞—à–µ–≥–æ API
  fetch('https://lucrora-bot.onrender.com/api/init', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ initData: tg.initData })
  })
    .then(res => {
      if (!res.ok) {
        return res.json().then(err => {
          console.error("üî¥ –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª —Å JSON-–æ—à–∏–±–∫–æ–π:", err);
          throw new Error(err.message || `–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: ${res.status}`);
        }).catch(() => {
          console.error("üî¥ –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª —Å –Ω–µ-JSON-–æ—à–∏–±–∫–æ–π:", res.status, res.statusText);
          throw new Error(`–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: ${res.status} ${res.statusText}`);
        });
      }
      return res.json();
    })
    .then(data => {
      console.log("üü¢ –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", data);
      if (data.ok) {
        // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–æ–≤ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
        if (currentMainBalance) currentMainBalance.textContent = `‚Ç§ ${(data.main_balance || 0).toFixed(2)} LCR`;
        if (currentBonusBalance) currentBonusBalance.textContent = `(Bonus: ${(data.bonus_balance || 0).toFixed(2)} ‚Ç§s)`;

        if (loadingMessage) loadingMessage.classList.add('hidden');
        if (mainContentWrapper) mainContentWrapper.classList.remove('hidden');
        window.loadScreen = loadScreen; // –î–µ–ª–∞–µ–º loadScreen –¥–æ—Å—Ç—É–ø–Ω–æ–π –≥–ª–æ–±–∞–ª—å–Ω–æ
        window.appData = { // –î–µ–ª–∞–µ–º appData –¥–æ—Å—Ç—É–ø–Ω–æ–π –≥–ª–æ–±–∞–ª—å–Ω–æ
            user: user,
            balances: {
                main: data.main_balance || 0,
                bonus: data.bonus_balance || 0,
                lucrum: data.lucrum_balance || 0,
            },
            totalInvested: data.total_invested || 0,
            totalWithdrawn: data.total_withdrawn || 0,
            isRegistered: data.isRegistered || false // <--- –í–ê–ñ–ù–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–æ–±–∞–≤–ª—è–µ–º —Ñ–ª–∞–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        };

        // <--- –í–ê–ñ–ù–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if (window.appData.isRegistered) {
          loadScreen('home'); // –ï—Å–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –¥–æ–º–∞—à–Ω–∏–π —ç–∫—Ä–∞–Ω
        } else {
          loadScreen('registration'); // –ï—Å–ª–∏ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —ç–∫—Ä–∞–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        }

      } else {
        showError('–û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞', data.message || '–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
      }
    })
    .catch(error => {
      console.error("üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ:", error);
      showError('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º', `–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. ${error.message || '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'}`);
    });

  // --- –°–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ ---
  if (navHome) navHome.addEventListener('click', () => loadScreen('home'));
  if (navInvest) navInvest.addEventListener('click', () => loadScreen('invest'));
  if (navGames) navGames.addEventListener('click', () => loadScreen('games'));
  if (navReferrals) navReferrals.addEventListener('click', () => loadScreen('referrals'));
  if (navHistory) navHistory.addEventListener('click', () => loadScreen('history'));
  if (userProfileIcon) userProfileIcon.addEventListener('click', () => loadScreen('profile'));
});
